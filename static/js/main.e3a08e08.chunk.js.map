{"version":3,"sources":["components/Quotes.jsx","App.js","reportWebVitals.js","index.js"],"names":["firstQuote","quote","character","image","Quotes","props","getSimpson","axios","get","then","response","data","console","log","setState","simpson","state","bind","this","id","type","onClick","src","alt","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAGMA,EAAa,CACjB,CACEC,MACE,wEACFC,UAAW,eACXC,MACE,gGAqDSC,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,WAAa,WACXC,IACGC,IAAI,gDACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BF,MAAK,SAACE,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZC,QAASJ,EAAK,SAjBpB,EAAKK,MAAQ,CACXD,QAASf,EAAW,IAEtB,EAAKM,WAAa,EAAKA,WAAWW,KAAhB,gBALD,E,gEASjBC,KAAKZ,e,+BAgBG,IACDS,EAAWG,KAAKF,MAAhBD,QAEP,OACE,gCACE,wBAAQI,GAAG,MAAMC,KAAK,SAASC,QAASH,KAAKZ,WAA7C,gCAGA,sBAAKa,GAAG,UAAR,UACE,6BAAKJ,EAAQd,QACb,4BACE,iCAASc,EAAQb,cAEnB,qBACEoB,IAAKP,EAAQZ,MACboB,IAAKR,EAAQb,sB,GAzCJsB,aCDNC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3a08e08.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst firstQuote = [\n  {\n    quote:\n      \"Shoplifting is a victimless crime, like punching someone in the dark.\",\n    character: \"Nelson Muntz\",\n    image:\n      \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FNelsonMuntz.png?1497567511185\"\n  }\n];\n\nclass Quotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      simpson: firstQuote[0]\n    };\n    this.getSimpson = this.getSimpson.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSimpson();\n  }\n\n  getSimpson = () => {\n    axios\n      .get(\"https://thesimpsonsquoteapi.glitch.me/quotes\")\n      .then((response) => response.data)\n      .then((data) => {\n        console.log(data);\n        this.setState({\n          simpson: data[0],\n        });\n      });\n  }\n\n  \n  render() {\n    const {simpson} = this.state;\n    \n    return (\n      <div>\n        <button id=\"btn\" type=\"button\" onClick={this.getSimpson}>\n          select a new quote\n        </button>\n        <div id=\"simpson\">\n          <h1>{simpson.quote}</h1>\n          <p>\n            <strong>{simpson.character}</strong>\n          </p>\n          <img\n            src={simpson.image}\n            alt={simpson.character}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Quotes;\n","import React from 'react';\nimport './App.css';\nimport Quotes from './components/Quotes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quotes />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}